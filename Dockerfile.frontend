# --- Build stage ---
FROM node:20-alpine AS build
WORKDIR /app

# pnpm
RUN corepack enable && corepack prepare pnpm@9.7.0 --activate

# Copiamos manifiestos para instalar deps con caché
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/frontend/package.json ./apps/frontend/package.json
# si tu frontend usa libs internas, copia también sus package.json
# COPY libraries/tu-lib/package.json ./libraries/tu-lib/package.json

RUN pnpm install --frozen-lockfile

# Copiamos el resto del repo
COPY . .

# Compila Next (usa next.config.mjs de apps/frontend)
WORKDIR /app/apps/frontend
ENV NODE_ENV=production
RUN pnpm build

# --- Runtime stage ---
FROM node:20-alpine AS runtime
WORKDIR /app
RUN corepack enable && corepack prepare pnpm@9.7.0 --activate
ENV NODE_ENV=production
ENV PORT=4200
EXPOSE 4200

# Solo lo necesario para correr
COPY --from=build /app/apps/frontend/.next ./apps/frontend/.next
COPY --from=build /app/apps/frontend/public ./apps/frontend/public
COPY --from=build /app/apps/frontend/package.json ./apps/frontend/package.json
COPY --from=build /app/package.json /app/pnpm-workspace.yaml ./
# deps en runtime del frontend
RUN pnpm install --prod --filter ./apps/frontend

WORKDIR /app/apps/frontend
CMD ["pnpm","start","-p","4200"]
